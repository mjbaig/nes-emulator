class e{constructor(e){this.nesWindow=e}run(){setInterval((()=>{console.log("setting attribute"),this.nesWindow.setAttribute("test",(new Date).getUTCMilliseconds())}),1e3)}}class t extends HTMLElement{constructor(){super(),this.value="",this.nes=null}static get observedAttributes(){return["test"]}attributeChangedCallback(e,t,s){console.log("change detected"),"test"===e&&(this.innerHTML=`<span id="nes-window">${s}</span>`)}connectedCallback(){console.log("connected"),this.nes=new e(this),this.nes.run(),this.innerHTML='<canvas id="nes-window" width="256" height="240" style="border:1px solid #000000;"></canvas>'}}customElements.define("nes-window",t);const s={NESWindow:t};export{s as NESEmulator};
