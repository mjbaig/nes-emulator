class t{constructor(t){this.nesWindow=t}run(){setInterval((()=>{console.log("setting attribute"),this.nesWindow.setAttribute("test",(new Date).getUTCMilliseconds())}),1e3)}}class e extends HTMLElement{constructor(){super(),this.value="",this.nes=null,this.canvas=document.createElement("canvas"),this.canvas.id="nes-window",this.canvas.width="256",this.canvas.height="240",this.canvas.style="border:1px solid #000000;"}static get observedAttributes(){return["test"]}attributeChangedCallback(t,e,s){console.log("change detected"),"test"===t&&(this.canvas.width+=5)}connectedCallback(){console.log("connected"),this.nes=new t(this),this.nes.run(),this.appendChild(this.canvas)}}customElements.define("nes-window",e);const s={NESWindow:e};export{s as NESEmulator};
